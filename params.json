{"name":"Holes","tagline":"A Python module for detecting, analysing and visualising persistent homological features of complex networks","body":"###############################################################################\r\nCopyright (C) 2012 G. Petri\r\n\r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program. If not, see <http://www.gnu.org/licenses/>.\r\n\r\n###############################################################################\r\n\r\n-----------------------------------------------------------------------------\r\nPersistent homology of weighted networks\r\n-----------------------------------------------------------------------------\r\n\r\nThe code allows to process weighted networks to produce their weighted clique rank filtration as described in the article:\r\n\r\n(1) \"Topological strata of weighted complex networks\" \r\nPetri, G., Scolamiero, M., Donato I. & Vaccarino, F.\r\narXiv:1301.6498(2013)\r\ncurrently under review.\r\n\r\nThe Python module contains various functions to produce filtrations of sparse and dense graphs, push them through Jython into the JavaPlex persistent homology engine (code.google.com/p/javaplex/) \r\n\r\n***If you make use of this module, please cite the article.***\r\n\r\nThe code is currently under active development. \r\nDetailed instructions (in the form of iPython Notebooks) will follow shortly.\r\n\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\nAuthor   : G. Petri  \r\nEmail    : giovanni.petri@isi.it\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n\r\n###############################################################################\r\n\r\n-----------------------------------------------------------------------------\r\nTo-do list\r\n-----------------------------------------------------------------------------\r\n\r\n1. We are currently working on a C++ implementation of the persistent homology calculation in order\r\nto take full advantage of the clique complex formulation of network homology made in (1). \r\n\r\n2. Documentation and install instructions.  \r\n\r\n###############################################################################","google":"UA-39713987-2","note":"Don't delete this file! It's used internally to help with page regeneration."}